{"version":3,"sources":["components/Header/Header.js","components/Header/index.js","constant/index.js","components/Filter/Filter.js","components/Filter/index.js","components/DataTable/Helper.js","components/DataTable/index.js","components/DataTable/DataTable.js","constant/types.js","actions/index.js","components/Status/Status.js","components/Status/index.js","config.js","components/Supplier/Supplier.js","App.js","reportWebVitals.js","reducers/index.js","index.js"],"names":["Logo","width","height","viewBox","version","id","stroke","strokeWidth","fill","fillRule","d","Header","DROPDOWN","SUPPLIER","STATUS","ALL_SUPPLIERS","ALL_STATUS","PREV","SORT_ORDERS","DropdownWrapper","props","select","ref","useRef","current","selectItem","FilterList","list","Array","isArray","map","name","type","placeholder","options","cb","wrapperStyle","listItemStyle","isMulti","rest","title","onChange","styles","wrapper","listItem","Filter","onResetClick","className","onClick","sortArrayOfObjects","key","order","sort","a","b","paginate","totalItems","startPage","endPage","currentPage","pageSize","maxPages","totalPages","Math","ceil","maxPagesBeforeCurrentPage","floor","maxPagesAfterCurrentPage","startIndex","endIndex","min","pages","from","keys","i","DataTable","state","sortColumn","sortOrder","mRows","setPaginationDataState","rows","setState","length","onColumnClick","onPageChange","action","page","this","prevProps","prevRows","columns","columnTags","display","isIconRequired","renderValue","row","column","Component","component","selector","data","slice","values","data-label","noData","renderHeader","renderRows","React","FETCH_ORDER_LIST_SUCCESS","FETCH_ORDER_LIST_FAIL","RESET_FILTERS","SET_SELECTED_FILTER","fetchOrders","dispatch","fetch","method","body","JSON","stringify","response","json","ActionTypes","resetFilters","setSelectedFilter","value","statusBgMapping","Status","orderBuyerStatus","cols","deliveryDay","moment","format","vendorName","isPendingVendorOnboarding","isBYOS","total","filters","fontSize","margin","App","onOptionSelect","option","selectedFilters","Object","orderList","supplierOptions","statusOptions","modifiedFilterConfig","selectValue","label","connect","filteredList","bindActionCreators","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","totalCount","limit","store","createStore","Set","vendor","status","filterData","reduce","filter","item","Map","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76cb105b.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.scss';\n\n\nconst Logo = () => (\n    <svg width=\"200px\" height=\"30px\" viewBox=\"0 0 400 105\" version=\"1.1\">\n        <g id=\"Logos\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n            <g id=\"logo/notch/knockout\" fill=\"#FFFFFF\">\n                <path d=\"M127.551167,28.1290075 C151.147466,28.1290075 168.603587,43.99481 168.603587,66.5645037 C168.603587,89.136402 151.147466,105 127.551167,105 C103.954868,105 86.4987472,89.136402 86.4987472,66.5645037 C86.4987472,43.99481 103.954868,28.1290075 127.551167,28.1290075 Z M277.509262,28.1301097 C295.824349,28.1301097 307.99047,36.8841881 312.742243,49.7915486 L312.742243,49.7915486 L291.320819,58.5323999 L291.248324,58.5500359 C289.471077,51.680807 285.431081,47.756793 278.640637,47.756793 C270.398079,47.756793 264.095334,53.9712848 264.095334,66.565606 C264.095334,79.1577227 270.398079,85.3722145 278.640637,85.3722145 C285.909993,85.3722145 290.112555,80.6369437 291.729432,72.7955293 L291.729432,72.7955293 L308.557256,79.6757807 L313.403493,81.6444012 C309.115254,95.4820617 296.654756,104.998898 277.509262,104.998898 C254.07553,104.998898 237.427847,90.1163032 237.427847,66.565606 C237.427847,43.1758374 254.07553,28.1301097 277.509262,28.1301097 Z M50.9118549,28.1294484 C70.7910944,28.1294484 78.7129132,42.0310394 78.7129132,57.2421047 L78.7129132,57.2421047 L78.7129132,103.036229 L52.528732,103.036229 L52.528732,63.6197297 C52.528732,53.6443571 48.1658002,48.4108688 40.2439815,48.4108688 C31.3555515,48.4108688 26.1841812,56.2611012 26.1841812,67.2196818 L26.1841812,67.2196818 L26.1841812,103.036229 L0,103.036229 L0,38.8367157 L26.1841812,28.1316529 L26.1841812,42.6857766 C29.7386744,34.180807 40.2439815,28.1294484 50.9118549,28.1294484 Z M347.466874,0 L347.471268,42.6857766 C351.025761,34.180807 361.531068,28.1294484 372.198942,28.1294484 C392.078181,28.1294484 400,42.0310394 400,57.2421047 L400,57.2421047 L400,103.036229 L373.815819,103.036229 L373.815819,63.6197297 C373.815819,53.6443571 369.452887,48.4108688 361.531068,48.4108688 C352.642638,48.4108688 347.471268,56.2611012 347.471268,67.2196818 L347.471268,67.2196818 L347.471268,103.036229 L321.287087,103.036229 L321.287087,10.7028583 L347.466874,0 Z M217.377034,8.07773705 L217.377034,25.925387 L242.29803,15.7361778 L242.29803,35.1953189 L217.377034,45.3845282 L217.377034,103.001398 L192.001292,103.001398 L192.001292,55.7567111 L175.19983,62.6281446 L175.19983,43.1690034 L192.001292,36.2997745 L192.001292,18.454329 L217.377034,8.07773705 Z M127.551167,47.1031581 C118.337604,47.1031581 113.166234,54.9533905 113.166234,66.5645037 C113.166234,78.1778214 118.337604,86.0280539 127.551167,86.0280539 C136.76473,86.0280539 141.9361,78.1778214 141.9361,66.5645037 C141.9361,54.9533905 136.76473,47.1031581 127.551167,47.1031581 Z\" id=\"Combined-Shape-Copy\"/>\n            </g>\n        </g>\n    </svg>\n)\n\nconst Header = () => {\n    return <header>\n        <Logo/>\n    </header>\n}\n\nexport default Header;","import Header from './Header';\nexport default Header;","export const DROPDOWN = 'DROPDOWN';\nexport const SUPPLIER = 'supplier';\nexport const STATUS = 'status';\nexport const ALL_SUPPLIERS = 'All Suppliers';\nexport const ALL_STATUS = 'All Status';\nexport const PREV = 'prev';\nexport const NEXT = 'next';\n\nexport const SORT_ORDERS = {\n    NONE: 'none',\n    ASC: 'asc',\n    DESC: 'desc'\n}","import React, { useRef } from 'react';\nimport { Dropdown } from 'reactjs-dropdown-component';\nimport { DROPDOWN } from '../../constant';\nimport \"./Filter.scss\";\n\nconst DropdownWrapper = (props) => {\n    const { select } = props;\n    const ref = useRef(null);\n    if(select && ref.current){\n        ref.current.selectItem(select)\n    }\n    return <Dropdown ref={ref} {...props} />\n}\n\nconst FilterList = ({list = []}) => {\n    return Array.isArray(list) && list.map(({name, type, placeholder, options, cb, wrapperStyle = {}, isMulti = false, listItemStyle, ...rest}) => {\n        switch(type){\n            case DROPDOWN: {\n                return <DropdownWrapper\n                    name={name}\n                    title={placeholder}\n                    list={options}\n                    onChange={cb}\n                    styles={{\n                        wrapper: wrapperStyle,\n                        listItem: listItemStyle\n                    }}\n                    {...rest}\n                />\n            }\n            default: {\n                return <></>\n            }\n        }\n    })\n}\n\nconst Filter = (props) => {\n    const { onResetClick } = props;\n    return <section className=\"filter-container\">\n        <FilterList {...props}/>\n        <button onClick={onResetClick}>\n            <i className=\"fa fa-times\"></i>\n            <span>Reset Filters</span> \n        </button>\n    </section>\n}\n\nexport default Filter;","import Filter from './Filter';\nexport default Filter;","import { SORT_ORDERS } from '../../constant';\n\nexport const sortArrayOfObjects = (list, key, order) => {\n    if(!Array.isArray(list)){\n        return []\n    }\n    return list.sort((a, b) => {\n        if(order === SORT_ORDERS.ASC){\n            return a[key] < b[key] ? -1  : 1\n        }else if(order === SORT_ORDERS.DESC){\n            return a[key] < b[key] ? 1  : -1\n        }else{ \n            return 0\n        }\n    })\n}\nexport const paginate = (\n    totalItems,\n    currentPage = 1,\n    pageSize = 10,\n    maxPages = 10\n) => {\n    const totalPages = Math.ceil(totalItems / pageSize);\n\n    if (currentPage < 1) {\n        currentPage = 1;\n    } else if (currentPage > totalPages) {\n        currentPage = totalPages;\n    }\n\n    let startPage, endPage;\n    if (totalPages <= maxPages) {\n        startPage = 1;\n        endPage = totalPages;\n    } else {\n        const maxPagesBeforeCurrentPage = Math.floor(maxPages / 2);\n        const maxPagesAfterCurrentPage = Math.ceil(maxPages / 2) - 1;\n        if (currentPage <= maxPagesBeforeCurrentPage) {\n            startPage = 1;\n            endPage = maxPages;\n        } else if (currentPage + maxPagesAfterCurrentPage >= totalPages) {\n            startPage = totalPages - maxPages + 1;\n            endPage = totalPages;\n        } else {\n            startPage = currentPage - maxPagesBeforeCurrentPage;\n            endPage = currentPage + maxPagesAfterCurrentPage;\n        }\n    }\n    const startIndex = (currentPage - 1) * pageSize;\n    const endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n    const pages = Array.from(Array((endPage + 1) - startPage).keys()).map(i => startPage + i);\n    return {\n        totalItems: totalItems,\n        currentPage: currentPage,\n        pageSize: pageSize,\n        totalPages: totalPages,\n        startPage: startPage,\n        endPage: endPage,\n        startIndex: startIndex,\n        endIndex: endIndex,\n        pages: pages\n    };\n}","import DataTable from './DataTable';\nexport default DataTable;","import React from 'react';\nimport { paginate, sortArrayOfObjects } from './Helper';\nimport { PREV, NEXT, SORT_ORDERS } from '../../constant';\n\nimport './DataTable.scss';\n\nexport default class DataTable extends React.Component{\n\n    state = {\n        ...paginate(0),\n        sortColumn: '',\n        sortOrder: SORT_ORDERS.NONE,\n        mRows: []\n    }\n\n    componentDidMount(){\n       this.setPaginationDataState()\n    }\n\n    componentDidUpdate(prevProps){\n        const { rows: prevRows = []} = prevProps;\n        const { rows = [] } = this.props;\n        if(prevRows !== rows){\n            this.setPaginationDataState();\n        }\n    }\n\n    setPaginationDataState = () => {\n        const { rows = [], pageSize = 10 } = this.props;\n        this.setState({...paginate(rows.length, 1, pageSize), mRows: [...rows]})\n    }\n\n    onColumnClick = key => () => {\n        const { rows } = this.props; \n        const { sortOrder, sortColumn } = this.state;\n        const getSortOrder = () => {\n            if((sortColumn === key || sortColumn === '') && sortOrder === SORT_ORDERS.NONE ){\n                return SORT_ORDERS.ASC\n            }else if(sortColumn !== key && sortOrder !== SORT_ORDERS.NONE ){\n                return SORT_ORDERS.ASC\n            }else if(sortColumn === key && sortOrder === SORT_ORDERS.ASC){\n                return SORT_ORDERS.DESC\n            }else{\n                return SORT_ORDERS.NONE\n            }\n        }\n        const order  = getSortOrder();\n        const mRows = order !== SORT_ORDERS.NONE ? sortArrayOfObjects([...rows], key, order) : [...rows];\n        this.setState({\n            sortColumn: key,\n            sortOrder: order,\n            mRows\n        })\n    }\n\n    renderHeader() {\n        const { columns } = this.props;\n        const { sortColumn, sortOrder } = this.state;\n        if(!Array.isArray(columns)){\n            return <tr/>\n        }\n\n        const columnTags = columns.map(({key, display, sort}) => {\n            const isIconRequired = sortColumn === key && sortOrder !==  SORT_ORDERS.NONE;\n            const className = sortOrder === SORT_ORDERS.ASC ? 'fa fa-arrow-down' : 'fa fa-arrow-up';\n            if(sort){\n                return <th className=\"sort\" key={key} onClick={this.onColumnClick(key)}>\n                    <span>{display}</span>\n                    {isIconRequired && <i className={className}></i> }\n                </th>\n            }\n            return <th key={key}>{display}</th>\n        })\n        return <tr>{columnTags}</tr>;\n    }\n\n    renderRows() {\n        const { columns } = this.props;\n        const { startIndex, endIndex, mRows: rows } = this.state;\n        \n        if(!Array.isArray(columns) && !Array.isArray(rows)){\n            return <tr/>\n        }\n\n        const renderValue = (row, column) => {\n            const { component: Component, key, selector } = column;\n            if(Component){\n                return <Component data={row}/>\n            }else if(selector){\n                return selector(row);\n            }else{\n                return row[key]\n            }\n        }\n\n        return [...rows].slice(startIndex, endIndex + 1).map(row => {\n            const values = columns.map((({key, display, ...rest }, i) => <td key={i} data-label={display}>\n                {renderValue(row, {...rest, key})}\n            </td>))\n            return <tr>{values}</tr>\n        })\n    }\n\n    onPageChange = action => () => {\n        const { rows, pageSize = 10 } = this.props;\n        const { currentPage } = this.state;\n        let page = currentPage\n        if(action === PREV){\n            page -= 1;\n        }else{\n            page += 1;\n        }\n\n        this.setState({...paginate(rows.length, page, pageSize)})\n    }\n\n    render() {\n        const { rows = [] } = this.props;\n        const { currentPage, startPage, endPage } = this.state;\n        const noData = !rows.length;\n        return <>\n            <table className=\"table\">\n                <thead>{this.renderHeader()}</thead>\n                <tbody>{this.renderRows()}</tbody>\n            </table>\n            {noData && <div className=\"no-rows\">No rows to display</div> }\n            <div className=\"pagination\">\n                { currentPage !== startPage && !noData && <i className=\"fa fa-chevron-left\" onClick={this.onPageChange(PREV)}></i> }\n                <span>Page: {currentPage}</span>\n                { currentPage !== endPage && <i className=\"fa fa-chevron-right\" onClick={this.onPageChange(NEXT)}></i> }\n            </div>\n        </>\n    }\n}","export const FETCH_ORDER_LIST_SUCCESS = 'FETCH_ORDER_LIST_SUCCESS';\nexport const FETCH_ORDER_LIST_FAIL = 'FETCH_ORDER_LIST_FAIL';\n\nexport const RESET_FILTERS = 'RESET_FILTERS';\nexport const SET_SELECTED_FILTER = 'SET_SELECTED_FILTER';","import * as ActionTypes from '../constant/types';\n\nconst BASE_URL = 'http://api.interview.staging.foodieorders.com';\n\nexport function fetchOrders() {\n    return async dispatch => {\n        try{\n            const response = await fetch(`${BASE_URL}/v3/orders/search`, {\n                method: \"POST\",\n                body: JSON.stringify({}),\n            })\n            const data = await response.json();\n            dispatch({ type: ActionTypes.FETCH_ORDER_LIST_SUCCESS, response: data });\n        }catch {\n            dispatch({ type: ActionTypes.FETCH_ORDER_LIST_FAIL});\n        }\n    }\n}\n\nexport function resetFilters() {\n    return {\n        type: ActionTypes.RESET_FILTERS\n    }\n}\n\nexport function setSelectedFilter(value) {\n    return {\n        type: ActionTypes.SET_SELECTED_FILTER,\n        value\n    }\n}","import React from 'react';\nimport \"./Status.scss\";\n\nconst statusBgMapping = {\n    'Delivered': 'light-green',\n    'In Shopping Cart': 'light-purple'\n}\n\nconst Status = ({data}) => {\n    const { orderBuyerStatus } = data;\n    const className = `status-container ${statusBgMapping[orderBuyerStatus]}`\n    return <span className={className}>{orderBuyerStatus}</span>\n}\n\nexport default Status;","import Status from './Status';\nexport default Status;","import moment from 'moment';\nimport Status from './components/Status';\nimport Supplier from './components/Supplier';\nimport { DROPDOWN, STATUS, SUPPLIER } from './constant';\n\nexport const cols = [\n    {\n      key: 'orderBuyerStatus',\n      display: 'STATUS',\n      component: Status,\n      sort: true\n    },\n    {\n      key: 'deliveryDay',\n      display: 'DELIVERY DATE',\n      selector: ({deliveryDay}) => {\n        if(!deliveryDay){\n            return ''\n        }\n        return moment(deliveryDay).format(\"ll\")\n      }\n    },\n    {\n      key: 'vendorName',\n      display: 'SUPPLIER',\n      component: Supplier,\n      sort: true\n    },\n    {\n      key: 'total',\n      display: 'TOTAL',\n      selector: ({total}) => {\n        if(!total){\n            return ''\n        }\n        return total\n      }\n    } \n];\n\nexport const filters = [\n  {\n    type: DROPDOWN,\n    name: SUPPLIER,\n    placeholder: 'Select supplier',\n    options: [],\n    wrapperStyle: { width: '300px', fontSize: '14px', margin: '5px 10px 0 0'},\n    listItemStyle: {fontSize: '14px'},\n    cb: () => ({})\n  },\n  {\n    type: DROPDOWN,\n    name: STATUS,\n    placeholder: 'Select status',\n    options: [],\n    wrapperStyle: { width: '300px', fontSize: '14px', margin: '5px 10px 5px 0'},\n    listItemStyle: {fontSize: '14px'},\n    cb: () => ({})\n  }\n]","import React from 'react';\nimport \"./Supplier.scss\";\n\nconst Supplier = ({data}) => {\n    const { vendorName, isPendingVendorOnboarding, isBYOS } = data;\n    return <span>\n        <span>{vendorName}</span> \n        { !isBYOS && <span className=\"market\">Market</span>}\n        { isPendingVendorOnboarding && <span className=\"pending-onboarding\">1st</span> }\n    </span>\n}\n\nexport default Supplier;","import React from 'react';\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport Header from './components/Header';\nimport Filter from './components/Filter';\nimport DataTable from './components/DataTable';\nimport { fetchOrders, resetFilters, setSelectedFilter } from './actions';\nimport { cols, filters } from './config';\nimport { ALL_STATUS, ALL_SUPPLIERS, STATUS, SUPPLIER } from './constant';\nimport './App.scss';\n\nclass App extends React.Component {\n\n  componentDidMount(){\n    this.props.fetchOrders();\n  }\n\n  onOptionSelect = key => (option) => {\n    const { selectedFilters } = this.props;\n    const { value } = option;\n    if(value === ALL_SUPPLIERS || value === ALL_STATUS){\n      const { [key]: selectedKey, ...rest} = selectedFilters;\n      if(!Object.keys(rest).length){\n        this.props.resetFilters()\n      }else{\n        this.props.setSelectedFilter({...rest})\n      }\n    }else{\n      this.props.setSelectedFilter({...selectedFilters, [key]: value })\n    }\n  }\n\n  onResetClick = () => this.props.resetFilters();\n\n  render() {\n    const { orderList, supplierOptions = [], statusOptions = [], selectedFilters } = this.props;\n    const modifiedFilterConfig = filters.map(({name, ...rest}) => {\n      switch(name){\n        case SUPPLIER:{\n          const selectValue = selectedFilters['vendorName'] || ALL_SUPPLIERS;\n          return { \n            ...rest, \n            cb: this.onOptionSelect('vendorName'), \n            options: supplierOptions,\n            ...(supplierOptions.length ? { select: {value: selectValue, label : selectValue } } : {})\n          }\n        }\n        case STATUS:{\n          const selectValue = selectedFilters['orderBuyerStatus'] || ALL_STATUS;\n          return { \n            ...rest, \n            cb: this.onOptionSelect('orderBuyerStatus'), \n            options: statusOptions,\n            ...(statusOptions.length ? { select: {value: selectValue, label : selectValue } } : {})\n          }\n        }\n        default: {\n          return {name, ...rest}\n        }\n      }\n    })\n    return (\n      <section>\n        <Header/>\n        <section className=\"filter-bg\">\n          <section className=\"container\">\n            <Filter list={modifiedFilterConfig} onResetClick={this.onResetClick}/>\n          </section>\n        </section>\n        <section className=\"table-bg\">\n          <section className=\"container\">\n            <DataTable columns={cols} rows={orderList}/>\n          </section>\n        </section>\n      </section>\n    );\n  }\n}\n\nexport default connect(\n  ({ filteredList, selectedFilters, supplierOptions, statusOptions }) => (\n    { \n      orderList: filteredList, \n      selectedFilters, \n      supplierOptions, \n      statusOptions\n    }\n  ),\n  (dispatch) =>\n      bindActionCreators(\n          {\n            fetchOrders,\n            resetFilters,\n            setSelectedFilter\n          },\n          dispatch\n      )\n)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as ActionTypes from '../constant/types';\nimport { ALL_SUPPLIERS, ALL_STATUS } from '../constant';\n\nconst initialState = {\n    totalCount: 0,\n    limit: 0,\n    orderList: [],\n    filteredList: [],\n    selectedFilters: {},\n    supplierOptions: [],\n    statusOptions: []\n};\n\nexport function notchReducer(state = initialState, action) {\n    switch (action.type) {\n\n        case ActionTypes.FETCH_ORDER_LIST_SUCCESS: {\n            const { response = {} } = action;\n            const { data, totalCount, limit } = response;\n            const supplierOptions = Array.isArray(data) ? [ALL_SUPPLIERS, ...new Set(data.map(({vendorName})=>vendorName))].map(vendor => ({label: vendor, value: vendor})) : []\n            const statusOptions = Array.isArray(data) ? [ALL_STATUS, ...new Set(data.map(({orderBuyerStatus})=>orderBuyerStatus))].map(status => ({label: status, value: status})) : []\n            return { ...state,  totalCount, limit, orderList: data, filteredList: data, supplierOptions, statusOptions  }\n        }\n        case ActionTypes.FETCH_ORDER_LIST_FAIL: {\n            return { ...initialState }\n        }\n\n        case ActionTypes.RESET_FILTERS: {\n            return { ...state, filteredList: state.orderList, selectedFilters: {}}\n        }\n\n        case ActionTypes.SET_SELECTED_FILTER: {\n            const { value } = action;\n            const filterData = Object.keys(value).reduce((list, key) => {\n                return [...list, ...state.orderList.filter(item => item[key] === value[key])]\n            }, []);\n            const filteredList = [...new Map(filterData.map(item =>[item['id'], item])).values()];\n            return { ...state, selectedFilters: value, filteredList}\n        }\n        \n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './styles/index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { notchReducer } from './reducers';\n\nconst store = createStore(notchReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}